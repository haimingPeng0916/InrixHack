{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/InrixHack/src/components/Map/Map.js\";\n// import React, { useEffect, useState } from \"react\";\n// import { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\n// import circle from \"../../assets/green-circle.png\"\n// import './Map.css';\n// import PopUp from '../../components/PopUp/PopUp.js'\n\n// export class MapContainer extends React.Component {\n//   state = { center: { lat: 37.95, lng: -121.941 }, markers: null, activeMarker: null, selectedPlace: null, activeRate: null, blockData: null };\n\n//   clickMarker = (props, marker, e) => {\n//     this.setState({\n//       activeMarker: marker,\n//       selectedPlace: props.place_id,\n//       activeRate: marker.rate\n//     });\n//   };\n\n//   closeInfoWindow = () => {\n//     this.setState({\n//       activeMarker: null,\n//       selectedPlace: null,\n//       activeRate: null\n//     });\n//   };\n\n//   // handleLocationSubmit = (location) => {\n//   //   const [lat, lng] = location.split(',').map((coord) => parseFloat(coord.trim()));\n\n//   //   if (isNaN(lat) || isNaN(lng) || !isFinite(lat) || !isFinite(lng)) {\n//   //     return;\n//   //   }\n\n//   //   this.setState({\n//   //     center: { lat, lng },\n//   //     showModal: false,\n//   //   });\n//   // };\n\n//   handleCloseModal = () => {\n//     this.setState({ showModal: false });\n//   };\n\n//   componentDidMount() {\n//     const parkingLotUrl =\n//       \"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=3000\";\n//     const blockDataUrl =\n//       \"https://api.iq.inrix.com/blocks/v3?point=37.74638779388551%7C-122.42209196090698&radius=1000\";\n\n//     const fetchData = (url, stateKey) => {\n//       var myHeaders = new Headers();\n//       myHeaders.append(\n//         \"Authorization\",\n//         \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhcHBJZCI6ImdsYjUwZWUzb2oiLCJ0b2tlbiI6eyJpdiI6IjQyODM4YWQyM2Y0ZTRiOTM3Mjg2ZDFlMGFmZTk1Y2UwIiwiY29udGVudCI6ImNmMDVmN2Q1ODY0MTYwNzc5YWNiZjdlMjA5OGJjOWZhZGY3YjQ1ZWNmMjMwOTA4ZGRlMTY3Nzc5NDI4MGJhMjliMTYzZmM4M2FlNGViOTkzMTFiMTUzMTc4MTNiYjdmOWJjZTNmYjkwNDdiMTQ2NmZiODE2ZWUxMmJhNTNiYjQ3NTZmYWM4NWQzMmI3OTgzYjk2MTAzOGNlZDNmZDY1ZmNhN2EzYzA1ZTI3MWVkZjExM2YxMjJiNDg2YjA5MjJhZDhkN2Q2ZDA1MDVmNTY1ZTIwY2EyYWEzMTM1MDNjODNhN2I3MWE1YzBjZDJkNjc2NzdiMGFkNzVlN2RmYmIwNTc5ZjhhYjQ2MjVjMzMzZDM4M2M1YThmMjcyOGYwNmRlNjU1YTM3ODFjZWIxNjVlOWEwMTk2MGQzMTFiN2RmYmQ5NTVjMWM2OTBlZjA4ZmM1ZjNjZDk2MTA4MmMxMDM1MGI5ODQ4NjcxMmVmYTliODg5YWJiNGI2NzU4ZWRlZmFhNGE2ZjA1YWYwNTE1YzcwMGIzYTU3YzM3N2Y5ZGE1MDVmNGZjYzk3NTgxODE1NGY0YTAzNmZiNzliNTYxYzZkOThkZWEzZmE3MzQxNDE0ZTU4Zjk3YjJhNzFhNjUyZGU5ZjNjNDEzN2VjMDIyOTgwOGFmZmI1NzYwNjRjYjU3OThhNmQyMzM0MzhlMWNkMTViNjU2NjQ4MGE0Y2QxNzcyMjJkMjUzMTE2NjYyNmUwOWIyMDRkMGY0YzNlMTgzOTljYzM2OGFmZWZiOTgzNTY2MmZjY2QxZTdiZDRjNjQzNzIwMzlkODQwNjEwMTUzZDZkZGYwMGFjNDk0MDVlNjMxNjA0OTg1NTM3ZTJlZDdiZDE2YmMxYjBlIn0sInNlY3VyaXR5VG9rZW4iOnsiaXYiOiI0MjgzOGFkMjNmNGU0YjkzNzI4NmQxZTBhZmU5NWNlMCIsImNvbnRlbnQiOiJlYzEwZjJjYzk1NDk2OTMzOTFmMGM3ZjEzYTk4ZGE4NWUxNzA0M2QyY2YzYWE2ZjFmODM2NzQzOTM4YWQ5ZDQwODAwYWY0ZDdjMzczYTNiMjFjOTM1MjI5In0sImp0aSI6ImFhNzdiNjhkLTY5ZjYtNDYyNi1iNGViLTk2YTA3YmRkZDAwMyIsImlhdCI6MTcwMTU4ODMwMCwiZXhwIjoxNzAxNTkxOTAwfQ.AAnj6R3Pz0KnCFRu5TN_s815oWvMdmQk-vOGjQMRlnE\"  \n//       );\n\n//       var requestOptions = {\n//         method: 'GET',\n//         headers: myHeaders,\n//         redirect: 'follow'\n//       };\n\n//       fetch(url, requestOptions)\n//         .then((response) => {\n//           if (!response.ok) {\n//             throw new Error(`HTTP error! Status: ${response.status}`);\n//           }\n//           return response.json();\n//         })\n//         .then((data) => {\n//           if (data && data.result && Array.isArray(data.result)) {\n//             const parsedData = data.result.map((item) => ({\n//               rate: item.rateCard,\n//               place_id: item.id,\n//               position: {\n//                 lat: item.peps[0].pepPt[1],\n//                 lng: item.peps[0].pepPt[0],\n//               },\n//             }));\n\n//             this.setState({ [stateKey]: parsedData });\n//           } else {\n//             console.error(\"Invalid data format:\", data);\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching data:\", error.message);\n//         });\n//     };\n\n//     this.setState({\n//       center: { lat: 37.95, lng: -121.941}\n//     });\n\n//     fetchData(parkingLotUrl, \"markers\");\n//     fetchData(blockDataUrl, \"blockData\");\n//   }\n\n//   render() {\n//     const { google } = this.props;\n//     return (\n//       <div>\n//         <PopUp showModal={this.state.showModal} handleClose={this.handleCloseModal} handleLocationSubmit={this.handleLocationSubmit} />\n\n//         <div className=\"map-container\">\n//           <Map\n//             google={google}\n//             center={this.state.center}\n//             style={{ height: '90%', position: 'relative', width: '100%' }}\n//             zoom={16}\n//           >\n//             {this.state.markers != null &&\n//               this.state.markers.map((marker) => (\n//                 <Marker\n//                   key={marker.place_id}\n//                   position={marker.position}\n//                   onClick={(props, marker, e) => this.clickMarker(props, marker, e)}\n//                   icon={{\n//                     url: this.getMarkerIcon(marker.rate), // Determine icon based on availability\n//                     anchor: new google.maps.Point(16, 16),\n//                     scaledSize: new google.maps.Size(32, 32),\n//                   }}\n//                 />\n//               ))}\n\n//             {this.state.blockData &&\n//               this.state.blockData.map((block) => (\n//                 <Marker\n//                   key={block.place_id}\n//                   position={block.position}\n//                   onClick={(props, marker, e) => this.clickMarker(props, marker, e)}\n//                   icon={{\n//                     url: this.getMarkerIcon(block.rate), // Determine icon based on availability\n//                     anchor: new google.maps.Point(16, 16),\n//                     scaledSize: new google.maps.Size(32, 32),\n//                   }}\n//                 />\n//               ))}\n//             <InfoWindow\n//               marker={this.state.activeMarker}\n//               visible={this.state.activeMarker !== null}\n//               onClose={this.closeInfoWindow}\n//             >\n//               <div>\n//                 <h4>{this.state.selectedPlace}</h4>\n//                 {this.state.activeMarker && this.state.markers ? (\n//                   <div>\n//                     <p>Rate Information:</p>\n//                     <p>{this.state.markers[0].rate[0]}</p>\n//                   </div>\n//                 ) : (\n//                   <p>Rate information not available</p>\n//                 )}\n//               </div>\n//             </InfoWindow>\n//           </Map>\n\n//           <div className=\"annotation-table\">\n//             <div className=\"annotation-row\">\n//               <div className=\"circle green\"></div>\n//               <div>Available</div>\n//             </div>\n//             <div className=\"annotation-row\">\n//               <div className=\"circle yellow\"></div>\n//               <div>Almost Filled Up</div>\n//             </div>\n//             <div className=\"annotation-row\">\n//               <div className=\"circle red\"></div>\n//               <div>Fully Occupied</div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n// })(MapContainer);\n\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\nimport circle from \"../../assets/green-circle.png\";\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: {\n        lat: 37.95,\n        lng: -121.941\n      },\n      markers: null,\n      activeMarker: null,\n      selectedPlace: null,\n      activeRate: null,\n      blockData: null\n    };\n    this.clickMarker = (props, marker, e) => {\n      this.setState({\n        activeMarker: marker,\n        selectedPlace: props.place_id,\n        activeRate: marker.rate\n      });\n    };\n  }\n  componentDidMount() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhcHBJZCI6ImdsYjUwZWUzb2oiLCJ0b2tlbiI6eyJpdiI6IjVjYzU5NDhiNTUxMjhmMmI3MmNmMjMxOTkwODJkMGMyIiwiY29udGVudCI6IjE1MjRiZGYyZDFiNGQ2YTg5Nzg2NTE3ZTE5M2EwNDA3ZDUxZGIwM2I3YzJmNjJiNTMxOWVhMGM3ZjIwN2QzNzdjYWNmZjFlODk4M2Q4OTRhOTQ1MmE5MDFiM2EzN2JkNDg4Y2UwZWU2ZWIwYjliODRhZDRjZjg3NTdmNGNjMjY2Zjc3ODNhYjI2YjYzMTZiYjViM2MzMTliMDVjNTYwZDMwYjdhYzhhYWYxMTg3NmM0YWNhN2VjYTgyNDM2OWE5OGYwYzdlNTY0ODI5N2I2YzE0ODQ0YWFkYWU2MjE2NTMwNDI0NTM4NzYwYWIyZjVjMTMzZjdhYzVjNzY3ODQ1NWFiYWUxNDMxMjFhNmVhZGFjMDQxNzM1OWJkODEzYmFhMjdhYTE1ODNiYjdhYmYwYTk3ZGMwOGY0ZjM0ODhmY2NiYTAzOGQyYTdmYWE0NjU0Y2Y5NTFjMDQ1ZjU0MDIzOWZhMWVhODU5OGZkYWJmYmRmYTU2ZWE5MzExYjhmYTI3MmI1YjY2Y2MxZDkxOWI0Nzk3NzU1ZWYyMTMwYTA5OWJhMDg1MTUwY2IxOTM1ZTFjZDE0YjI1MGNiOTAwMWVjNjdlNmI5NThlMzNjY2Q0OGY0YzRmOGJkMmRkNzZmNzRhODc3OWY5OGNkOWM0MmM3MWJlMDdkMzAxMzI5M2RlMTg0OWUzZjM0NzlkMjRkMTk4ZjZlOGY1MGQxNzg1M2RkYjNlNTIzNjU1MThhY2FlNzFjZDM4ZjA0ZTk2MjA3NjMzMDlmNmIwMGM1ZTM4MTkwYzQxMDdjNjk0NjNiZjU3MDIzMmEyYTE2Y2U5NzQ3MDIxMThiN2EyNDJjMmM4YjA0NzY0MzJhMjZlOTQ0ODY2NmM0ZjNlMTA5In0sInNlY3VyaXR5VG9rZW4iOnsiaXYiOiI1Y2M1OTQ4YjU1MTI4ZjJiNzJjZjIzMTk5MDgyZDBjMiIsImNvbnRlbnQiOiIxMTI5ODBlYmY2YTFjMWY5OWJkOTJhMGYzZjc5NzUwMmM4NGRiMjdjN2I3MzY1Y2YzMTkwOGU5M2Q5MjI5NzQwYzhkNGY5YjdkZDJjYjkzM2NjN2Y4NjNmIn0sImp0aSI6ImMzODhkYzEzLWEwYTctNGZmZC1iMmEyLTgzNmVmODlhOWJiMSIsImlhdCI6MTcwMTU5MTIzOSwiZXhwIjoxNzAxNTk0ODM5fQ.T7nag2tsPfem-pSoWDNWK-jYbitl-A_KHJN8UmmfdC0\");\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=2000\", requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      if (data && data.result && Array.isArray(data.result)) {\n        // Check if data.result is an array\n        const parsedMarkers = data.result.map(item => ({\n          place_id: item.id,\n          position: {\n            lat: item.peps[0].pepPt[1],\n            lng: item.peps[0].pepPt[0]\n          }\n        }));\n        this.setState({\n          markers: parsedMarkers\n        });\n      } else {\n        console.error('Invalid data format:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n    });\n    fetch(\"https://api.iq.inrix.com/blocks/v3?point=37.74304518280319%7C-122.42438793182373&radius=50\", requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      if (data && data.result && Array.isArray(data.result)) {\n        // Check if data.result is an array\n        const parsedMarkers = data.result.map(item => ({\n          place_id: item.id,\n          position: {\n            lat: item.peps[0].pepPt[1],\n            lng: item.peps[0].pepPt[0]\n          }\n        }));\n        this.setState({\n          markers: parsedMarkers\n        });\n      } else {\n        console.error('Invalid data format:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n    });\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    console.log('Rendering markers:', this.state.markers);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        google: google,\n        center: this.state.center,\n        style: {\n          height: \"90%\",\n          position: \"relative\",\n          width: \"100%\"\n        },\n        zoom: 16,\n        children: [this.state.markers != null && this.state.markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.position,\n          onClick: (props, marker, e) => this.clickMarker(props, marker, e),\n          icon: {\n            url: circle,\n            // URL of the green circle image\n            anchor: new google.maps.Point(16, 16),\n            // Adjust the anchor point based on the image size\n            scaledSize: new google.maps.Size(32, 32) // Adjust the size of the image\n          }\n        }, marker.place_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)), this.state.blockData && this.state.blockData.map(block => /*#__PURE__*/_jsxDEV(Marker, {\n          position: block.position,\n          onClick: (props, marker, e) => this.clickMarker(props, marker, e),\n          icon: {\n            url: circle,\n            anchor: new google.maps.Point(16, 16),\n            scaledSize: new google.maps.Size(32, 32)\n          }\n        }, block.place_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(InfoWindow, {\n          marker: this.state.activeMarker,\n          visible: this.state.activeMarker !== null,\n          onClose: this.closeInfoWindow,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: this.state.selectedPlace\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 5\n            }, this), this.state.activeMarker && this.state.markers ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Rate Information:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.markers[0].rate[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 7\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Rate information not available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"annotation-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"annotation-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"annotation-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Almost Filled Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"annotation-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Fully Occupied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n})(MapContainer);","map":{"version":3,"names":["React","useEffect","useState","GoogleApiWrapper","Map","Marker","InfoWindow","circle","jsxDEV","_jsxDEV","MapContainer","Component","constructor","args","state","center","lat","lng","markers","activeMarker","selectedPlace","activeRate","blockData","clickMarker","props","marker","e","setState","place_id","rate","componentDidMount","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","ok","Error","status","json","data","result","Array","isArray","parsedMarkers","map","item","id","position","peps","pepPt","console","error","catch","message","render","google","log","children","style","height","width","zoom","onClick","icon","url","anchor","maps","Point","scaledSize","Size","fileName","_jsxFileName","lineNumber","columnNumber","block","visible","onClose","closeInfoWindow","className","apiKey"],"sources":["/Users/macbook/Desktop/InrixHack/src/components/Map/Map.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\n// import circle from \"../../assets/green-circle.png\"\n// import './Map.css';\n// import PopUp from '../../components/PopUp/PopUp.js'\n\n// export class MapContainer extends React.Component {\n//   state = { center: { lat: 37.95, lng: -121.941 }, markers: null, activeMarker: null, selectedPlace: null, activeRate: null, blockData: null };\n\n//   clickMarker = (props, marker, e) => {\n//     this.setState({\n//       activeMarker: marker,\n//       selectedPlace: props.place_id,\n//       activeRate: marker.rate\n//     });\n//   };\n\n//   closeInfoWindow = () => {\n//     this.setState({\n//       activeMarker: null,\n//       selectedPlace: null,\n//       activeRate: null\n//     });\n//   };\n\n//   // handleLocationSubmit = (location) => {\n//   //   const [lat, lng] = location.split(',').map((coord) => parseFloat(coord.trim()));\n  \n//   //   if (isNaN(lat) || isNaN(lng) || !isFinite(lat) || !isFinite(lng)) {\n//   //     return;\n//   //   }\n  \n//   //   this.setState({\n//   //     center: { lat, lng },\n//   //     showModal: false,\n//   //   });\n//   // };\n\n//   handleCloseModal = () => {\n//     this.setState({ showModal: false });\n//   };\n  \n//   componentDidMount() {\n//     const parkingLotUrl =\n//       \"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=3000\";\n//     const blockDataUrl =\n//       \"https://api.iq.inrix.com/blocks/v3?point=37.74638779388551%7C-122.42209196090698&radius=1000\";\n\n//     const fetchData = (url, stateKey) => {\n//       var myHeaders = new Headers();\n//       myHeaders.append(\n//         \"Authorization\",\n//         \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhcHBJZCI6ImdsYjUwZWUzb2oiLCJ0b2tlbiI6eyJpdiI6IjQyODM4YWQyM2Y0ZTRiOTM3Mjg2ZDFlMGFmZTk1Y2UwIiwiY29udGVudCI6ImNmMDVmN2Q1ODY0MTYwNzc5YWNiZjdlMjA5OGJjOWZhZGY3YjQ1ZWNmMjMwOTA4ZGRlMTY3Nzc5NDI4MGJhMjliMTYzZmM4M2FlNGViOTkzMTFiMTUzMTc4MTNiYjdmOWJjZTNmYjkwNDdiMTQ2NmZiODE2ZWUxMmJhNTNiYjQ3NTZmYWM4NWQzMmI3OTgzYjk2MTAzOGNlZDNmZDY1ZmNhN2EzYzA1ZTI3MWVkZjExM2YxMjJiNDg2YjA5MjJhZDhkN2Q2ZDA1MDVmNTY1ZTIwY2EyYWEzMTM1MDNjODNhN2I3MWE1YzBjZDJkNjc2NzdiMGFkNzVlN2RmYmIwNTc5ZjhhYjQ2MjVjMzMzZDM4M2M1YThmMjcyOGYwNmRlNjU1YTM3ODFjZWIxNjVlOWEwMTk2MGQzMTFiN2RmYmQ5NTVjMWM2OTBlZjA4ZmM1ZjNjZDk2MTA4MmMxMDM1MGI5ODQ4NjcxMmVmYTliODg5YWJiNGI2NzU4ZWRlZmFhNGE2ZjA1YWYwNTE1YzcwMGIzYTU3YzM3N2Y5ZGE1MDVmNGZjYzk3NTgxODE1NGY0YTAzNmZiNzliNTYxYzZkOThkZWEzZmE3MzQxNDE0ZTU4Zjk3YjJhNzFhNjUyZGU5ZjNjNDEzN2VjMDIyOTgwOGFmZmI1NzYwNjRjYjU3OThhNmQyMzM0MzhlMWNkMTViNjU2NjQ4MGE0Y2QxNzcyMjJkMjUzMTE2NjYyNmUwOWIyMDRkMGY0YzNlMTgzOTljYzM2OGFmZWZiOTgzNTY2MmZjY2QxZTdiZDRjNjQzNzIwMzlkODQwNjEwMTUzZDZkZGYwMGFjNDk0MDVlNjMxNjA0OTg1NTM3ZTJlZDdiZDE2YmMxYjBlIn0sInNlY3VyaXR5VG9rZW4iOnsiaXYiOiI0MjgzOGFkMjNmNGU0YjkzNzI4NmQxZTBhZmU5NWNlMCIsImNvbnRlbnQiOiJlYzEwZjJjYzk1NDk2OTMzOTFmMGM3ZjEzYTk4ZGE4NWUxNzA0M2QyY2YzYWE2ZjFmODM2NzQzOTM4YWQ5ZDQwODAwYWY0ZDdjMzczYTNiMjFjOTM1MjI5In0sImp0aSI6ImFhNzdiNjhkLTY5ZjYtNDYyNi1iNGViLTk2YTA3YmRkZDAwMyIsImlhdCI6MTcwMTU4ODMwMCwiZXhwIjoxNzAxNTkxOTAwfQ.AAnj6R3Pz0KnCFRu5TN_s815oWvMdmQk-vOGjQMRlnE\"  \n//       );\n\n//       var requestOptions = {\n//         method: 'GET',\n//         headers: myHeaders,\n//         redirect: 'follow'\n//       };\n      \n//       fetch(url, requestOptions)\n//         .then((response) => {\n//           if (!response.ok) {\n//             throw new Error(`HTTP error! Status: ${response.status}`);\n//           }\n//           return response.json();\n//         })\n//         .then((data) => {\n//           if (data && data.result && Array.isArray(data.result)) {\n//             const parsedData = data.result.map((item) => ({\n//               rate: item.rateCard,\n//               place_id: item.id,\n//               position: {\n//                 lat: item.peps[0].pepPt[1],\n//                 lng: item.peps[0].pepPt[0],\n//               },\n//             }));\n\n//             this.setState({ [stateKey]: parsedData });\n//           } else {\n//             console.error(\"Invalid data format:\", data);\n//           }\n//         })\n//         .catch((error) => {\n//           console.error(\"Error fetching data:\", error.message);\n//         });\n//     };\n\n//     this.setState({\n//       center: { lat: 37.95, lng: -121.941}\n//     });\n\n//     fetchData(parkingLotUrl, \"markers\");\n//     fetchData(blockDataUrl, \"blockData\");\n//   }\n  \n  \n//   render() {\n//     const { google } = this.props;\n//     return (\n//       <div>\n//         <PopUp showModal={this.state.showModal} handleClose={this.handleCloseModal} handleLocationSubmit={this.handleLocationSubmit} />\n\n//         <div className=\"map-container\">\n//           <Map\n//             google={google}\n//             center={this.state.center}\n//             style={{ height: '90%', position: 'relative', width: '100%' }}\n//             zoom={16}\n//           >\n//             {this.state.markers != null &&\n//               this.state.markers.map((marker) => (\n//                 <Marker\n//                   key={marker.place_id}\n//                   position={marker.position}\n//                   onClick={(props, marker, e) => this.clickMarker(props, marker, e)}\n//                   icon={{\n//                     url: this.getMarkerIcon(marker.rate), // Determine icon based on availability\n//                     anchor: new google.maps.Point(16, 16),\n//                     scaledSize: new google.maps.Size(32, 32),\n//                   }}\n//                 />\n//               ))}\n\n//             {this.state.blockData &&\n//               this.state.blockData.map((block) => (\n//                 <Marker\n//                   key={block.place_id}\n//                   position={block.position}\n//                   onClick={(props, marker, e) => this.clickMarker(props, marker, e)}\n//                   icon={{\n//                     url: this.getMarkerIcon(block.rate), // Determine icon based on availability\n//                     anchor: new google.maps.Point(16, 16),\n//                     scaledSize: new google.maps.Size(32, 32),\n//                   }}\n//                 />\n//               ))}\n//             <InfoWindow\n//               marker={this.state.activeMarker}\n//               visible={this.state.activeMarker !== null}\n//               onClose={this.closeInfoWindow}\n//             >\n//               <div>\n//                 <h4>{this.state.selectedPlace}</h4>\n//                 {this.state.activeMarker && this.state.markers ? (\n//                   <div>\n//                     <p>Rate Information:</p>\n//                     <p>{this.state.markers[0].rate[0]}</p>\n//                   </div>\n//                 ) : (\n//                   <p>Rate information not available</p>\n//                 )}\n//               </div>\n//             </InfoWindow>\n//           </Map>\n\n//           <div className=\"annotation-table\">\n//             <div className=\"annotation-row\">\n//               <div className=\"circle green\"></div>\n//               <div>Available</div>\n//             </div>\n//             <div className=\"annotation-row\">\n//               <div className=\"circle yellow\"></div>\n//               <div>Almost Filled Up</div>\n//             </div>\n//             <div className=\"annotation-row\">\n//               <div className=\"circle red\"></div>\n//               <div>Fully Occupied</div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n// })(MapContainer);\n\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\nimport circle from \"../../assets/green-circle.png\"\nimport './Map.css';\n\nexport class MapContainer extends React.Component {\n  state = { center: { lat: 37.95, lng: -121.941 }, markers: null, activeMarker: null, selectedPlace: null, activeRate: null, blockData: null };\n\n  clickMarker = (props, marker, e) => {\n    this.setState({\n      activeMarker: marker,\n      selectedPlace: props.place_id,\n      activeRate: marker.rate\n    });\n  };\n\n  \n  \n  componentDidMount() {\n    var myHeaders = new Headers();\n    myHeaders.append(\n      \"Authorization\",\n      \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhcHBJZCI6ImdsYjUwZWUzb2oiLCJ0b2tlbiI6eyJpdiI6IjVjYzU5NDhiNTUxMjhmMmI3MmNmMjMxOTkwODJkMGMyIiwiY29udGVudCI6IjE1MjRiZGYyZDFiNGQ2YTg5Nzg2NTE3ZTE5M2EwNDA3ZDUxZGIwM2I3YzJmNjJiNTMxOWVhMGM3ZjIwN2QzNzdjYWNmZjFlODk4M2Q4OTRhOTQ1MmE5MDFiM2EzN2JkNDg4Y2UwZWU2ZWIwYjliODRhZDRjZjg3NTdmNGNjMjY2Zjc3ODNhYjI2YjYzMTZiYjViM2MzMTliMDVjNTYwZDMwYjdhYzhhYWYxMTg3NmM0YWNhN2VjYTgyNDM2OWE5OGYwYzdlNTY0ODI5N2I2YzE0ODQ0YWFkYWU2MjE2NTMwNDI0NTM4NzYwYWIyZjVjMTMzZjdhYzVjNzY3ODQ1NWFiYWUxNDMxMjFhNmVhZGFjMDQxNzM1OWJkODEzYmFhMjdhYTE1ODNiYjdhYmYwYTk3ZGMwOGY0ZjM0ODhmY2NiYTAzOGQyYTdmYWE0NjU0Y2Y5NTFjMDQ1ZjU0MDIzOWZhMWVhODU5OGZkYWJmYmRmYTU2ZWE5MzExYjhmYTI3MmI1YjY2Y2MxZDkxOWI0Nzk3NzU1ZWYyMTMwYTA5OWJhMDg1MTUwY2IxOTM1ZTFjZDE0YjI1MGNiOTAwMWVjNjdlNmI5NThlMzNjY2Q0OGY0YzRmOGJkMmRkNzZmNzRhODc3OWY5OGNkOWM0MmM3MWJlMDdkMzAxMzI5M2RlMTg0OWUzZjM0NzlkMjRkMTk4ZjZlOGY1MGQxNzg1M2RkYjNlNTIzNjU1MThhY2FlNzFjZDM4ZjA0ZTk2MjA3NjMzMDlmNmIwMGM1ZTM4MTkwYzQxMDdjNjk0NjNiZjU3MDIzMmEyYTE2Y2U5NzQ3MDIxMThiN2EyNDJjMmM4YjA0NzY0MzJhMjZlOTQ0ODY2NmM0ZjNlMTA5In0sInNlY3VyaXR5VG9rZW4iOnsiaXYiOiI1Y2M1OTQ4YjU1MTI4ZjJiNzJjZjIzMTk5MDgyZDBjMiIsImNvbnRlbnQiOiIxMTI5ODBlYmY2YTFjMWY5OWJkOTJhMGYzZjc5NzUwMmM4NGRiMjdjN2I3MzY1Y2YzMTkwOGU5M2Q5MjI5NzQwYzhkNGY5YjdkZDJjYjkzM2NjN2Y4NjNmIn0sImp0aSI6ImMzODhkYzEzLWEwYTctNGZmZC1iMmEyLTgzNmVmODlhOWJiMSIsImlhdCI6MTcwMTU5MTIzOSwiZXhwIjoxNzAxNTk0ODM5fQ.T7nag2tsPfem-pSoWDNWK-jYbitl-A_KHJN8UmmfdC0\"  \n    );\n  \n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n  \n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=2000\", requestOptions)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data && data.result && Array.isArray(data.result)) {  // Check if data.result is an array\n          const parsedMarkers = data.result.map(item => ({\n            place_id: item.id,\n            position: {\n              lat: item.peps[0].pepPt[1],\n              lng: item.peps[0].pepPt[0],\n            }\n          }));\n  \n          this.setState({ markers: parsedMarkers });\n        } else {\n          console.error('Invalid data format:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error.message);\n      });\n\n    fetch(\"https://api.iq.inrix.com/blocks/v3?point=37.74304518280319%7C-122.42438793182373&radius=50\", requestOptions)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data && data.result && Array.isArray(data.result)) {  // Check if data.result is an array\n          const parsedMarkers = data.result.map(item => ({\n            place_id: item.id,\n            position: {\n              lat: item.peps[0].pepPt[1],\n              lng: item.peps[0].pepPt[0],\n            }\n          }));\n  \n          this.setState({ markers: parsedMarkers });\n        } else {\n          console.error('Invalid data format:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error.message);\n      });\n\n\n\n\n\n\n  }\n\n\n  \n  \n  render() {\n    const { google } = this.props;\n    console.log('Rendering markers:', this.state.markers);\n    return (\n      <div>\n      <Map\n        google={google}\n        center={this.state.center}\n        style={{ height: \"90%\", position: \"relative\", width: \"100%\" }}\n        zoom={16}\n      >\n        {this.state.markers != null &&\n          this.state.markers.map(marker => (\n            <Marker\n              key={marker.place_id}\n              position={marker.position}\n              onClick={(props, marker, e) => this.clickMarker(props, marker, e)}\n              icon={{\n                url: circle,  // URL of the green circle image\n                anchor: new google.maps.Point(16, 16),  // Adjust the anchor point based on the image size\n                scaledSize: new google.maps.Size(32, 32),  // Adjust the size of the image\n              }}\n              \n            />\n          ))}\n\n          {this.state.blockData &&\n          this.state.blockData.map((block) => (\n            <Marker\n              key={block.place_id}\n              position={block.position}\n              onClick={(props, marker, e) => this.clickMarker(props, marker, e)}\n              icon={{\n                url: circle,\n                anchor: new google.maps.Point(16, 16),\n                scaledSize: new google.maps.Size(32, 32),\n              }}\n            />\n          ))}\n        <InfoWindow\n  marker={this.state.activeMarker}\n  visible={this.state.activeMarker !== null}\n  onClose={this.closeInfoWindow}\n>\n  <div>\n    <h4>{this.state.selectedPlace}</h4>\n    {this.state.activeMarker && this.state.markers ? (\n      <div>\n        <p>Rate Information:</p>\n        <p>{this.state.markers[0].rate[0]}</p>\n      </div>\n    ) : (\n      <p>Rate information not available</p>\n    )}\n  </div>\n\n</InfoWindow>\n      </Map>\n      <div className=\"annotation-table\">\n            <div className=\"annotation-row\">\n              <div className=\"circle green\"></div>\n              <div>Available</div>\n            </div>\n            <div className=\"annotation-row\">\n              <div className=\"circle yellow\"></div>\n              <div>Almost Filled Up</div>\n            </div>\n            <div className=\"annotation-row\">\n              <div className=\"circle red\"></div>\n              <div>Fully Occupied</div>\n            </div>\n          </div>\n        </div>\n      \n    );\n  } \n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n})(MapContainer);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,mBAAmB;AAC7E,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,OAAO,MAAMC,YAAY,SAASV,KAAK,CAACW,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAChDC,KAAK,GAAG;MAAEC,MAAM,EAAE;QAAEC,GAAG,EAAE,KAAK;QAAEC,GAAG,EAAE,CAAC;MAAQ,CAAC;MAAEC,OAAO,EAAE,IA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/INRIX_Project/parking-app/src/components/Map/Map.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: {\n        lat: 37.85,\n        lng: -122.541\n      },\n      markers: null\n    };\n    this.clickMarker = (props, marker) => {\n      console.log(props.placeId);\n    };\n  }\n  componentDidMount() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9....\" // Your token here\n    );\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=1000\", requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      if (Array.isArray(data)) {\n        // Check if data is an array\n        const parsedMarkers = data.map(item => ({\n          place_id: item.place_id,\n          position: {\n            lat: item.latitude,\n            lng: item.longitude\n          }\n        }));\n        this.setState({\n          markers: parsedMarkers\n        });\n      } else {\n        console.error('Invalid data format:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n    });\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: google,\n      center: this.state.center,\n      style: {\n        height: \"100%\",\n        position: \"relative\",\n        width: \"100%\"\n      },\n      zoom: 8,\n      children: this.state.markers != null && this.state.markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.position,\n        onClick: () => this.clickMarker({\n          placeId: marker.place_id\n        })\n      }, marker.place_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n})(MapContainer);","map":{"version":3,"names":["React","useEffect","useState","GoogleApiWrapper","Map","Marker","jsxDEV","_jsxDEV","MapContainer","Component","constructor","args","state","center","lat","lng","markers","clickMarker","props","marker","console","log","placeId","componentDidMount","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","ok","Error","status","json","data","Array","isArray","parsedMarkers","map","item","place_id","position","latitude","longitude","setState","error","catch","message","render","google","style","height","width","zoom","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","apiKey"],"sources":["/Users/macbook/Desktop/INRIX_Project/parking-app/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\n\nexport class MapContainer extends React.Component {\n  state = { center: { lat: 37.85, lng: -122.541 }, markers: null };\n\n  clickMarker = (props, marker) => {\n    console.log(props.placeId);\n  };\n\n  \n  \n  componentDidMount() {\n    var myHeaders = new Headers();\n    myHeaders.append(\n      \"Authorization\",\n      \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9....\"  // Your token here\n    );\n  \n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n  \n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=1000\", requestOptions)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (Array.isArray(data)) {  // Check if data is an array\n          const parsedMarkers = data.map(item => ({\n            place_id: item.place_id,\n            position: {\n              lat: item.latitude,\n              lng: item.longitude,\n            }\n          }));\n  \n          this.setState({ markers: parsedMarkers });\n        } else {\n          console.error('Invalid data format:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error.message);\n      });\n  }\n  \n  render() {\n    const { google } = this.props;\n  \n    return (\n      <Map\n        google={google}\n        center={this.state.center}\n        style={{ height: \"100%\", position: \"relative\", width: \"100%\" }}\n        zoom={8}\n      >\n        {this.state.markers != null &&\n          this.state.markers.map(marker => (\n            <Marker\n              key={marker.place_id}\n              position={marker.position}\n              onClick={() => this.clickMarker({ placeId: marker.place_id })}\n            />\n          ))}\n      </Map>\n    );\n  }\n  \n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n})(MapContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
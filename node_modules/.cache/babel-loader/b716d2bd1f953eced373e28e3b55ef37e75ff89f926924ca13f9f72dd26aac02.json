{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/INRIX_Project/parking-app/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = props => {\n  _s();\n  const [coordinates, setCoordinates] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 37.85,\n    lng: -122.541\n  });\n  const clickMarker = (props, marker) => {\n    console.log(props.placeId);\n  };\n  useEffect(() => {\n    const myHeaders = new Headers();\n    // ...\n\n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=1000\", requestOptions).then(response => response.json()).then(data => {\n      const parsedCoordinates = data.map(item => ({\n        latitude: item.latitude,\n        longitude: item.longitude,\n        place_id: item.place_id\n      }));\n      setCoordinates(parsedCoordinates);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(Map, {\n    google: props.google,\n    center: center,\n    style: {\n      height: \"100%\",\n      position: \"relative\",\n      width: \"100%\"\n    },\n    zoom: 8,\n    children: coordinates != null && coordinates.map(coords => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: coords.latitude,\n        lng: coords.longitude\n      },\n      onClick: () => clickMarker({\n        placeId: coords.place_id\n      })\n    }, coords.place_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MapContainer, \"nsRx8ig/V2uoKdaIIvNU011jmYM=\");\n_c = MapContainer;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n})(MapContainer);\nvar _c;\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","useState","GoogleApiWrapper","Map","Marker","jsxDEV","_jsxDEV","MapContainer","props","_s","coordinates","setCoordinates","center","setCenter","lat","lng","clickMarker","marker","console","log","placeId","myHeaders","Headers","fetch","requestOptions","then","response","json","data","parsedCoordinates","map","item","latitude","longitude","place_id","catch","error","google","style","height","position","width","zoom","children","coords","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","apiKey","$RefreshReg$"],"sources":["/Users/macbook/Desktop/INRIX_Project/parking-app/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\n\nconst MapContainer = (props) => {\n  const [coordinates, setCoordinates] = useState([]);\n  const [center, setCenter] = useState({ lat: 37.85, lng: -122.541 });\n\n  const clickMarker = (props, marker) => {\n    console.log(props.placeId);\n  };\n\n  useEffect(() => {\n    const myHeaders = new Headers();\n    // ...\n\n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=1000\", requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        const parsedCoordinates = data.map((item) => ({\n          latitude: item.latitude,\n          longitude: item.longitude,\n          place_id: item.place_id,\n        }));\n\n        setCoordinates(parsedCoordinates);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return (\n    <Map\n      google={props.google}\n      center={center}\n      style={{ height: \"100%\", position: \"relative\", width: \"100%\" }}\n      zoom={8}\n    >\n      {coordinates != null &&\n        coordinates.map((coords) => (\n          <Marker\n            key={coords.place_id}\n            position={{ lat: coords.latitude, lng: coords.longitude }}\n            onClick={() => clickMarker({ placeId: coords.place_id })}\n          />\n        ))}\n    </Map>\n  );\n};\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\",\n})(MapContainer);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,GAAG,EAAEC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,GAAG,EAAE,KAAK;IAAEC,GAAG,EAAE,CAAC;EAAQ,CAAC,CAAC;EAEnE,MAAMC,WAAW,GAAGA,CAACR,KAAK,EAAES,MAAM,KAAK;IACrCC,OAAO,CAACC,GAAG,CAACX,KAAK,CAACY,OAAO,CAAC;EAC5B,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;IAC/B;;IAEAC,KAAK,CAAC,4FAA4F,EAAEC,cAAc,CAAC,CAChHC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,GAAG,CAAEC,IAAI,KAAM;QAC5CC,QAAQ,EAAED,IAAI,CAACC,QAAQ;QACvBC,SAAS,EAAEF,IAAI,CAACE,SAAS;QACzBC,QAAQ,EAAEH,IAAI,CAACG;MACjB,CAAC,CAAC,CAAC;MAEHvB,cAAc,CAACkB,iBAAiB,CAAC;IACnC,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBlB,OAAO,CAACkB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACE9B,OAAA,CAACH,GAAG;IACFkC,MAAM,EAAE7B,KAAK,CAAC6B,MAAO;IACrBzB,MAAM,EAAEA,MAAO;IACf0B,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,QAAQ,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAO,CAAE;IAC/DC,IAAI,EAAE,CAAE;IAAAC,QAAA,EAEPjC,WAAW,IAAI,IAAI,IAClBA,WAAW,CAACoB,GAAG,CAAEc,MAAM,iBACrBtC,OAAA,CAACF,MAAM;MAELoC,QAAQ,EAAE;QAAE1B,GAAG,EAAE8B,MAAM,CAACZ,QAAQ;QAAEjB,GAAG,EAAE6B,MAAM,CAACX;MAAU,CAAE;MAC1DY,OAAO,EAAEA,CAAA,KAAM7B,WAAW,CAAC;QAAEI,OAAO,EAAEwB,MAAM,CAACV;MAAS,CAAC;IAAE,GAFpDU,MAAM,CAACV,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACxC,EAAA,CA7CIF,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AA+ClB,eAAeL,gBAAgB,CAAC;EAC9BiD,MAAM,EAAE;AACV,CAAC,CAAC,CAAC5C,YAAY,CAAC;AAAC,IAAA2C,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
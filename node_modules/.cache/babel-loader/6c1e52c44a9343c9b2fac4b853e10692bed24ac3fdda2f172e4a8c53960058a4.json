{"ast":null,"code":"var _jsxFileName = \"/Users/haimingpeng/Desktop/InrixHack/src/components/Map/Map.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\nimport circle from \"../../assets/green-circle.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      center: {\n        lat: 37.95,\n        lng: -121.941\n      },\n      markers: null\n    };\n    this.clickMarker = (props, markers) => {\n      console.log(props.placeId);\n    };\n  }\n  componentDidMount() {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    var authToken = 'test';\n    console.log(\"before:     \" + authToken);\n    var token2 = fetch(\"https://api.iq.inrix.com/auth/v1/appToken?appId=glb50ee3oj&hashToken=Z2xiNTBlZTNvanxsZTJTcThLZGNLNjZEWWc2YjhsU1RhWFNZS1h4bzEzNzMxbmhJWnJw\", requestOptions)\n    // .then(response => response.text())\n    .then(response => {\n      response.json().then(data => {\n        // console.log(\"boop ------------------------\")\n        // console.log(data)\n        // console.log(data.result.token)\n        // console.log(\"END ------------------------\")\n        return data.result.token;\n      }).catch(err => {\n        console.log(err);\n      });\n      // console.log(\"boop ------------------------\")\n      // console.log(response.text())\n      // authToken = response.result.token\n    })\n    // .then(result => console.log(result))\n    // .then(authToken => result.token)\n    .catch(error => console.log('error', error));\n    console.log(token2);\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", `Bearer ${authToken}`);\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=2000\", requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      if (data && data.result && Array.isArray(data.result)) {\n        // Check if data.result is an array\n        const parsedMarkers = data.result.map(item => ({\n          place_id: item.id,\n          position: {\n            lat: item.peps[0].pepPt[1],\n            lng: item.peps[0].pepPt[0]\n          }\n        }));\n        this.setState({\n          markers: parsedMarkers\n        });\n      } else {\n        console.error('Invalid data format:', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error.message);\n    });\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    console.log('Rendering markers:', this.state.markers);\n    return /*#__PURE__*/_jsxDEV(Map, {\n      google: google,\n      center: this.state.center,\n      style: {\n        height: \"100%\",\n        position: \"relative\",\n        width: \"100%\"\n      },\n      zoom: 16,\n      children: this.state.markers != null && this.state.markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.position,\n        onClick: () => this.clickMarker({\n          placeId: marker.place_id\n        }),\n        icon: {\n          url: circle,\n          // URL of the green circle image\n          anchor: new google.maps.Point(16, 16),\n          // Adjust the anchor point based on the image size\n          scaledSize: new google.maps.Size(32, 32) // Adjust the size of the image\n        }\n      }, marker.place_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n})(MapContainer);","map":{"version":3,"names":["React","useEffect","useState","GoogleApiWrapper","Map","Marker","circle","jsxDEV","_jsxDEV","MapContainer","Component","constructor","args","state","center","lat","lng","markers","clickMarker","props","console","log","placeId","componentDidMount","requestOptions","method","redirect","authToken","token2","fetch","then","response","json","data","result","token","catch","err","error","myHeaders","Headers","append","headers","ok","Error","status","Array","isArray","parsedMarkers","map","item","place_id","id","position","peps","pepPt","setState","message","render","google","style","height","width","zoom","children","marker","onClick","icon","url","anchor","maps","Point","scaledSize","Size","fileName","_jsxFileName","lineNumber","columnNumber","apiKey"],"sources":["/Users/haimingpeng/Desktop/InrixHack/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GoogleApiWrapper, Map, Marker } from \"google-maps-react\";\nimport circle from \"../../assets/green-circle.png\"\n\nexport class MapContainer extends React.Component {\n  state = { center: { lat: 37.95, lng: -121.941 }, markers: null };\n\n  clickMarker = (props, markers) => {\n    console.log(props.placeId);\n  };\n\n\n  \n  componentDidMount() {\n    \n    \n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n\n    var authToken = 'test';\n    console.log(\"before:     \" + authToken)\n    var token2 = fetch(\"https://api.iq.inrix.com/auth/v1/appToken?appId=glb50ee3oj&hashToken=Z2xiNTBlZTNvanxsZTJTcThLZGNLNjZEWWc2YjhsU1RhWFNZS1h4bzEzNzMxbmhJWnJw\", requestOptions)\n      // .then(response => response.text())\n      .then((response) => {\n        response.json().then((data) => {\n          // console.log(\"boop ------------------------\")\n          // console.log(data)\n          // console.log(data.result.token)\n          // console.log(\"END ------------------------\")\n          return data.result.token\n        }).catch((err) => {\n          console.log(err)\n        })\n        // console.log(\"boop ------------------------\")\n        // console.log(response.text())\n        // authToken = response.result.token\n      })\n      // .then(result => console.log(result))\n      // .then(authToken => result.token)\n      .catch(error => console.log('error', error));\n\n    console.log(token2)\n\n    var myHeaders = new Headers();\n    myHeaders.append(\n      \"Authorization\",\n      `Bearer ${authToken}`  \n    );\n  \n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n  \n    fetch(\"https://api.iq.inrix.com/lots/v3?point=37.74638779388551%7C-122.42209196090698&radius=2000\", requestOptions)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data && data.result && Array.isArray(data.result)) {  // Check if data.result is an array\n          const parsedMarkers = data.result.map(item => ({\n            place_id: item.id,\n            position: {\n              lat: item.peps[0].pepPt[1],\n              lng: item.peps[0].pepPt[0],\n            }\n          }));\n  \n          this.setState({ markers: parsedMarkers });\n        } else {\n          console.error('Invalid data format:', data);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error.message);\n      });\n  }\n  \n  \n  render() {\n    const { google } = this.props;\n  \n    console.log('Rendering markers:', this.state.markers);\n  \n    return (\n      <Map\n        google={google}\n        center={this.state.center}\n        style={{ height: \"100%\", position: \"relative\", width: \"100%\" }}\n        zoom={16}\n      >\n        {this.state.markers != null &&\n          this.state.markers.map(marker => (\n            <Marker\n              key={marker.place_id}\n              position={marker.position}\n              onClick={() => this.clickMarker({ placeId: marker.place_id })}\n              icon={{\n                url: circle,  // URL of the green circle image\n                anchor: new google.maps.Point(16, 16),  // Adjust the anchor point based on the image size\n                scaledSize: new google.maps.Size(32, 32),  // Adjust the size of the image\n              }}\n            />\n          ))}\n      </Map>\n    );\n  } \n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDrcb7m1SF9y8PMHuiC1JzRg2emyaRZJTg\"\n})(MapContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}